name: Build images

on:
  workflow_call:
    inputs:
      mirror: 
        type: string
      version:
        type: string
      targets:
        type: string

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.set_env.outputs.targets }}
      targets_subtargets: ${{ steps.set_env.outputs.targets_subtargets }}
      tag: ${{ steps.set_env.outputs.tag }}
      tag_number: ${{ steps.set_env.outputs.tag_number }}
      branch: ${{ steps.set_env.outputs.branch }}
      branch_number: ${{ steps.set_env.outputs.branch_number }}
      artifact_release_rel: ${{ steps.set_env.outputs.artifact_release_rel }}
      artifact_targets_rel: ${{ steps.set_env.outputs.artifact_targets_rel }}
      artifact_packages_rel: ${{ steps.set_env.outputs.artifact_packages_rel }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/checkout@v5
        with:
          repository: czy21/share
          path: feeds/share
      - name: Set env
        id: set_env
        run: |
          mv feeds/share/.github/workflows/scripts .github/workflows/
          branch="${GITHUB_REF#refs/heads/}"
          branch_number=$(echo $branch | sed 's|openwrt-||')
          tag=${{ inputs.version }}

          artifact_release_rel=
          artifact_targets_rel=
          artifact_packages_rel=
          if [ "${branch}" = "main" ];then
            tag=$branch
            artifact_release_rel=snapshots
            artifact_targets_rel=snapshots/targets
            artifact_packages_rel=snapshots/packages
          else
            tag=${tag:-$(curl -sL 'https://git.openwrt.org/?p=openwrt/openwrt.git;a=summary' | sed -n "s|.*OpenWrt \(v${branch_number}.*\) Release.*|\1|p" | head -n 1)}
            tag=$(echo $tag | sed '/^v/! s/^/v/')
            tag_number=$(echo $tag | sed 's|^v||')
            artifact_release_rel=releases/$tag_number
            artifact_targets_rel=releases/$tag_number/targets
            artifact_packages_rel=releases/packages-${branch_number}
          fi

          echo "branch=${branch}" >> "$GITHUB_OUTPUT"
          echo "branch_number=${branch_number}" >> "$GITHUB_OUTPUT"
          echo "tag=${tag}" >> "$GITHUB_OUTPUT"
          echo "tag_number=${tag_number}" >> "$GITHUB_OUTPUT"

          echo "artifact_release_rel=${artifact_release_rel}" >> "$GITHUB_OUTPUT"
          echo "artifact_targets_rel=${artifact_targets_rel}" >> "$GITHUB_OUTPUT"
          echo "artifact_packages_rel=${artifact_packages_rel}" >> "$GITHUB_OUTPUT"
          
          TARGETS="${{ inputs.targets }}"
          if [ "${{ github.event_name }}" = "push" ];then
            IMG_ROOTS=$(find config -name profiles.json -and ! -path config/profiles.json)
            CHANGES=$(git diff --diff-filter=d --name-only HEAD~)
            for ROOT in $IMG_ROOTS; do
              for CHANGE in $CHANGES; do
                if [[ "$CHANGE" = "$ROOT"* ]]; then
                  TARGETS+=$(echo "$ROOT" | sed -e 's|config/\(.*\)/profiles.json|\1 |')
                  break
                fi
              done
            done
          fi
          echo "Building $TARGETS"
          if [ -n "$TARGETS" ];then
            TARGETS="-t $TARGETS"
          fi

          python3 -B .github/workflows/scripts/openwrt-get_targets.py $TARGETS | while read v;do echo "$v" >> "$GITHUB_OUTPUT"; done

  build:
    name: Build ${{ matrix.target }}/${{ matrix.subtarget }}
    needs: setup
    runs-on: self-hosted
    strategy:
       fail-fast: false
       matrix:
         include: ${{fromJson(needs.setup.outputs.targets_subtargets)}}
    container:
      image: openwrt/imagebuilder:${{ matrix.target }}-${{ matrix.subtarget }}-${{ needs.setup.outputs.tag }}
      volumes:
        - openwrt-ib-${{ matrix.target }}-${{ matrix.subtarget }}-${{ needs.setup.outputs.tag }}-${{ github.run_id }}:/builder
        - openwrt-share:/data/
      options: --user root --privileged --pull always
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/checkout@v5
        with:
          repository: czy21/share
          path: feeds/share
      - name: Set env
        id: set_env
        shell: bash
        run: |
          mv feeds/share/.github/workflows/scripts .github/workflows/
          python3 -m pip install jinja2 requests

          download_dir=/data/download
          download_release_dir=${download_dir}/${{ needs.setup.outputs.artifact_release_rel }}
          download_targets_dir=${download_dir}/${{ needs.setup.outputs.artifact_targets_rel }}
          download_packages_dir=${download_dir}/${{ needs.setup.outputs.artifact_packages_rel }}

          echo "download_dir=${download_dir}" >> "$GITHUB_OUTPUT"
          echo "download_release_dir=${download_release_dir}" >> "$GITHUB_OUTPUT"
          echo "download_targets_dir=${download_targets_dir}" >> "$GITHUB_OUTPUT"
          echo "download_packages_dir=${download_packages_dir}" >> "$GITHUB_OUTPUT"
          
      - name: Setup
        working-directory: /builder
        shell: su buildbot -c "bash {0}"
        run: |
          set -e

          mkdir -p ${{ steps.set_env.outputs.download_targets_dir }} bin
          
          ln -snf ${{ steps.set_env.outputs.download_targets_dir }} bin/targets

          tag=${{ needs.setup.outputs.tag }}

          if [ -f setup.sh ];then
            sed -i "s|^sha256sum -c|#\0|" setup.sh
            UPSTREAM_URL=${{ inputs.mirror }} bash setup.sh
          fi

          sed -i 's|^CONFIG_SIGNATURE_CHECK|# \0|' .config

          if [ "$tag" = "main" ];then

            id;pwd;ls -al

            openwrt_plugin=$(sed -n -e 's|\(.*\)base\(\.*\)|\1plugin\2|p' repositories | sed -e "s|https://downloads.openwrt.org|https://openwrt-download.czy21.com|")

            sed -i -e "1i ${openwrt_plugin}" -e "s|https://downloads.openwrt.org|${{ inputs.mirror }}|" repositories

            cat repositories
          else
            id;pwd;ls -al

            (cd ${{ steps.set_env.outputs.download_targets_dir }}/../;ln -snf ../$(basename ${{ needs.setup.outputs.artifact_packages_rel }}) packages)

            openwrt_plugin=$(sed -n -e 's|openwrt_base\(.*\)base$|openwrt_plugin\1plugin|p' repositories.conf | sed -e "s|https://downloads.openwrt.org|https://openwrt-download.czy21.com|")

            sed -i -e "s|https://downloads.openwrt.org|${{ inputs.mirror }}|" -e "\$a ${openwrt_plugin}" repositories.conf
            cat repositories.conf

            export PATH=$(pwd)/staging_dir/host/bin:$PATH

            OPKG_KEYS=keys ./scripts/opkg-key add /data/pub.key
            OPKG_KEYS=files/etc/opkg/keys ./scripts/opkg-key add /data/pub.key

            mkdir -p files/etc/uci-defaults/
            tee files/etc/uci-defaults/99-setup << EOF
          #!/bin/sh
          echo "Replacing distfeeds..."
          sed -i "s|https://downloads.openwrt.org|${{ inputs.mirror }}|" /etc/opkg/distfeeds.conf
          echo "Appending customfeeds..."
          echo "${openwrt_plugin}" > /etc/opkg/customfeeds.conf
          EOF
          fi
        
      - name: Generate image
        shell: su buildbot -c "bash {0}"
        run: |
          (
            cd /builder
            sed -i -e '/device_packages/a\\t\"user_packages\": getenv(\"USER_PACKAGES\","").split(),' scripts/json_add_image_info.py
            make clean
            (cd /builder;find -maxdepth 1 -name 'repositories*' -exec sh -c 'bin_dir=bin/targets/${{ matrix.target }}/${{ matrix.subtarget }};mkdir -p $bin_dir;cp {} $bin_dir;' \;)
          )
          python3 -B .github/workflows/scripts/openwrt-gen_image.py --openwrt-dir /builder --config config --target ${{ matrix.target }}/${{ matrix.subtarget }}

      - name: Generate version
        shell: su buildbot -c "bash {0}"
        if: always()
        run: |
          wget https://downloads.openwrt.org/index.html -O ${{ steps.set_env.outputs.download_dir }}/index.html

          for t in $(ls ${{ steps.set_env.outputs.download_dir }}/releases/ | grep "^[0-9]");do
            sed -i -e "s|//archive.openwrt.org/\(releases/${t}\)|\1|" ${{ steps.set_env.outputs.download_dir }}/index.html
          done
          
          wget ${{ inputs.mirror }}/${{ needs.setup.outputs.artifact_release_rel }}/.overview.json -O ${{ steps.set_env.outputs.download_release_dir }}/.overview.json
          wget ${{ inputs.mirror }}/${{ needs.setup.outputs.artifact_release_rel }}/.targets.json -O ${{ steps.set_env.outputs.download_release_dir }}/.targets.json

          python3 -B .github/workflows/scripts/openwrt-gen_version.py --artifact-dir ${{ steps.set_env.outputs.download_dir }}

  clean:
    name: Clean ${{ matrix.target }}/${{ matrix.subtarget }}
    runs-on: self-hosted
    needs: [setup,build]
    strategy:
       fail-fast: false
       matrix:
         include: ${{fromJson(needs.setup.outputs.targets_subtargets)}}
    if: always()
    steps:
      - run: |
          volume_names=$(docker volume ls -q | grep 'openwrt-ib-${{ matrix.target }}-${{ matrix.subtarget }}-${{ needs.setup.outputs.tag }}-${{ github.run_id }}$' || true | xargs )
          if [ -n "${volume_names}" ];then
            docker volume rm $volume_names
          fi