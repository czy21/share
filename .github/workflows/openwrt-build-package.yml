name: Build packages

on:
  workflow_call:
    inputs:
      mirror: 
        type: string
      packages:
        type: string
      debug:
        type: boolean
        default: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      archs: ${{ steps.set_env.outputs.archs }}
      branch: ${{ steps.set_env.outputs.branch }}
      branch_number: ${{ steps.set_env.outputs.branch_number }}
      artifact_packages_rel: ${{ steps.set_env.outputs.artifact_packages_rel }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/checkout@v5
        with:
          repository: czy21/share
          path: feeds/share
      - name: Set env
        id: set_env
        run: |
          mv feeds/share/.github/workflows/scripts .github/workflows/
          branch="${GITHUB_REF#refs/heads/}"
          branch_number=$(echo $branch | sed 's|openwrt-||')

          artifact_packages_rel=releases/packages-${branch_number}
          
          if [ "${branch}" == "main" ];then
            artifact_packages_rel=snapshots/packages
          fi

          echo "branch=${branch}" >> "$GITHUB_OUTPUT"
          echo "branch_number=${branch_number}" >> "$GITHUB_OUTPUT"
          echo "artifact_packages_rel=${artifact_packages_rel}" >> "$GITHUB_OUTPUT"

          wget https://mirrors.pku.edu.cn/files/openwrt/$artifact_packages_rel/ -O .packages.json

          python3 -B .github/workflows/scripts/openwrt-get_targets.py | while read v;do echo "$v" >> "$GITHUB_OUTPUT"; done
  
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    needs: setup
    strategy:
       fail-fast: false
       matrix:
         arch: ${{fromJson(needs.setup.outputs.archs)}}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Determine packages
        run: |
          PACKAGES="${{ inputs.packages }}"
          if [ "${{ github.event_name }}" = "push" ];then
            # only detect packages with changes
            PKG_ROOTS=$(find . -name Makefile | grep -v ".*/src/Makefile" | sed -e 's@./\(.*\)/Makefile@\1/@')
            CHANGES=$(git diff --diff-filter=d --name-only HEAD~)
  
            for ROOT in $PKG_ROOTS; do
              for CHANGE in $CHANGES; do
                if [[ "$CHANGE" == "$ROOT"* ]]; then
                  PACKAGES+=$(echo "$ROOT" | sed -e 's@.*/\(.*\)/@\1 @')
                  break
                fi
              done
            done
          fi

          PACKAGES="${PACKAGES:-luci-app-attendedsysupgrade}"
          EXTRA_FEEDS=
          
          if [ "${{ inputs.packages }}" = 'luci-app-ssr-plus' ];then
            EXTRA_FEEDS+="src-git|helloworld|https://github.com/fw876/helloworld.git "
          fi

          if [[ "${{ inputs.packages }}" =~ passwall-packages-* ]];then
            PACKAGES=$(echo '${{ inputs.packages }}' | sed -e 's|passwall-packages-||')
            EXTRA_FEEDS+="src-git|passwall_packages|https://github.com/xiaorouji/openwrt-passwall-packages.git "
          fi

          if [ "${{ inputs.packages }}" = 'luci-app-passwall' ];then
            EXTRA_FEEDS+="src-git|passwall_packages|https://github.com/xiaorouji/openwrt-passwall-packages.git src-git|passwall|https://github.com/xiaorouji/openwrt-passwall.git "
          fi

          if [ "${{ inputs.packages }}" = 'luci-app-passwall2' ];then
            EXTRA_FEEDS+="src-git|passwall_packages|https://github.com/xiaorouji/openwrt-passwall-packages.git src-git|passwall|https://github.com/xiaorouji/openwrt-passwall2.git "
          fi

          if [[ "${{ needs.setup.outputs.branch }}" =~ openwrt-* ]] && 
              [ "${{ inputs.packages }}" = 'luci-app-ssr-plus' ] || 
               [[ "${{ inputs.packages }}" =~ passwall-packages-* ]] || 
                [[ "${{ inputs.packages }}" =~ luci-app-passwall* ]];then
            echo "NO_DEFAULT_FEEDS=y" >> $GITHUB_ENV
            EXTRA_FEEDS+="src-git-full|base|https://github.com/openwrt/openwrt.git;${{ needs.setup.outputs.branch }} "
            EXTRA_FEEDS+="$(wget -q -O - https://raw.githubusercontent.com/openwrt/openwrt/refs/heads/${{ needs.setup.outputs.branch }}/feeds.conf.default | sed 's|\(packages.git\)\(.*\)|\1|' | tr ' ' '|' | xargs) "
          fi

          echo "Building $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV
          echo "EXTRA_FEEDS=$EXTRA_FEEDS" >> $GITHUB_ENV

      - name: Build
        uses: openwrt/gh-action-sdk@v9
        env:
          ARCH: ${{ matrix.arch }}-${{ needs.setup.outputs.branch }}
          FEEDNAME: plugin
          V: ${{ inputs.debug && 's' || '' }}

      - name: Move created packages to project dir
        run: |
          ls -alR bin/packages || true

          artifact_dir=bin/artifact/${{ matrix.arch }}/plugin
          mkdir -p ${artifact_dir}
          find bin/packages/${{ matrix.arch }}/plugin \( -name "*.ipk" -o -name "*.apk" \) -exec cp -rv {} ${artifact_dir} \; || true

          if [ "${{ inputs.packages }}" = 'luci-app-ssr-plus' ];then
            artifact_dir=bin/artifact/${{ matrix.arch }}/helloworld
            mkdir -p ${artifact_dir}
            find bin/packages/${{ matrix.arch }}/helloworld \( -name "*.ipk" -o -name "*.apk" \) -exec cp -rv {} ${artifact_dir} \; || true
          fi

          if [[ "${{ inputs.packages }}" =~ passwall ]]; then
            artifact_dir=bin/artifact/${{ matrix.arch }}/passwall
            mkdir -p ${artifact_dir}
            find bin/packages/${{ matrix.arch }}/passwall_packages bin/packages/${{ matrix.arch }}/passwall \( -name "*.ipk" -o -name "*.apk" \) -exec cp -rv {} ${artifact_dir} \; || true
          fi

      - name: Store packages
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-packages
          path: bin/artifact/

      - name: Store logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-logs
          path: "logs/"

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: [setup,build]
    if: always()
    container:
      image: openwrt/sdk:x86-64-${{ needs.setup.outputs.branch }}
      volumes:
        - openwrt-sdk-x86-64-${{ needs.setup.outputs.branch }}-${{ github.run_id }}:/builder
        - openwrt-share:/data/
      options: --user root --privileged --pull always
    steps:
      - name: Set env
        id: set_env
        shell: bash
        run: |
          download_packages_dir=/data/download/${{ needs.setup.outputs.artifact_packages_rel }}
          echo "download_packages_dir=${download_packages_dir}" >> "$GITHUB_OUTPUT"

      - name: Setup
        working-directory: /builder
        shell: su buildbot -c "bash {0}"
        env: 
          UPSTREAM_URL: ${{ inputs.mirror }}
        run: |
          set -e
          
          mkdir -p ${{ steps.set_env.outputs.download_packages_dir }}

          [ ! -d ./scripts ] && sed -i "s|^sha256sum -c|# \0|" setup.sh && ./setup.sh

          make defconfig

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ${{ steps.set_env.outputs.download_packages_dir }}
          pattern: '*-packages'
          merge-multiple: true

      - name: Modify permission
        run: chown -R buildbot:buildbot ${{ steps.set_env.outputs.download_packages_dir }}

      - name: Generate index
        working-directory: /builder
        shell: su buildbot -c "bash {0}"
        run: |
          if grep -q '^CONFIG_USE_APK=y' .config;then
            sed -i -e 's|--sign $(BUILD_KEY_APK_SEC)|\0 --allow-untrusted|' package/Makefile
            ln -snf /data/apk.key private-key.pem
          else
            ln -snf /data/pri.key key-build
          fi

          find ${{ steps.set_env.outputs.download_packages_dir }} -type d -mindepth 2 -maxdepth 2 -exec sh -c 'f={};echo "Generating index for package $f";make -j4 package/index PACKAGE_SUBDIRS=$f V=s' \;

          if grep -q '^CONFIG_USE_APK=y' .config;then
            find ${{ steps.set_env.outputs.download_packages_dir }} -name 'packages.adb' -exec /builder/staging_dir/host/bin/apk adbsign --allow-untrusted --reset-signatures --sign-key /data/apk.key {} \;
          fi

  clean:
    name: Clean
    runs-on: self-hosted
    needs: [setup,build,deploy]
    if: always()
    steps:
      - run: docker volume rm openwrt-sdk-x86-64-${{ needs.setup.outputs.branch }}-${{ github.run_id }} || true